My Approach----

class Solution {
    int lowerBound(int[] arr, int target) {
        // code here
        int n=arr.length;
    int low=0;
    int index=0;
        for(int i=0;i<n;i++){
            if(arr[i]>=target){
                low=arr[i];
                index=i;
                break;
            }
        }
        return index;
    }
}


Better--
class Solution {
    int lowerBound(int[] arr, int target) {
        // code here
        int n=arr.length;
        for(int i=0;i<n;i++){
            if(arr[i]>=target)
            return i;
        
        }
        return n;
    }
}


By using binary search---
class Solution {
    int lowerBound(int[] arr, int target) {
        // code here
        int n=arr.length;
        int low=0;
        int high=n-1;
        int ans=n;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]>=target)
        {
            ans=mid;
            high=mid-1;
            
        }
        else {
            low=mid+1;
        }
    }
    return ans;
    }
}
