/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
       
if(head==null || head.next==null){
    return true;
}
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        ListNode leftHead=head;
        ListNode rightHead=reverse(slow);
        while(rightHead!=null){
            if(leftHead.val !=rightHead.val){
                return false;
            }
            rightHead=rightHead.next;
            leftHead=leftHead.next;
        }
return true;
    }
    
     ListNode reverse(ListNode head){
            ListNode curr=head;
            ListNode next;
            ListNode prev=null;
            while(curr!=null){
                next=curr.next;
                curr.next=prev;
                prev=curr;
                curr=next;
            }
            return prev;
        }
}