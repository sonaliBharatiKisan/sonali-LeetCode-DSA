BRUTE FORCE

class Solution {
    static int majorityElement(int arr[]) {
        // code here
      
        int n=arr.length;
        int res=0;
          if(n==1){
            res=arr[0];
                    
                    }
        for(int i=0;i<n;i++){
              int count=1;
            for(int j=0;j<n;j++){
                if( i!=j && arr[i]==arr[j] ){
                     count++;
                      if(count>n/2){
                      res= arr[i];
                     }
                     else{
                         res=-1;
                     }
               }
             
                     
        }
        }
       
        return res;
    }
}


OPTIMAL-- Moore's Voting algorithm
class Solution {
    static int majorityElement(int arr[]) {
        int n = arr.length;
        int count = 0;
        int candidate = -1;

        // Phase 1: Find a candidate
        for (int i = 0; i < n; i++) {
            if (count == 0) {
                candidate = arr[i];
                count = 1;
            } else if (arr[i] == candidate) {
                count++;
            } else {
                count--;
            }
        }

        // Phase 2: Verify the candidate
        count = 0;
        for (int i = 0; i < n; i++) {
            if (arr[i] == candidate) {
                count++;
            }
        }

        if (count > n / 2) {
            return candidate;
        }

        return -1; // No majority element
    }
}
